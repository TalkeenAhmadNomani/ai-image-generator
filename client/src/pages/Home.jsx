import React, { useState, useEffect } from "react";
import { Card, FormField, Loader } from "../components";
import { Link } from "react-router-dom";
import log from "../assets/log.png";

const RenderCards = ({ data, title }) => {
  if (data?.length > 0) {
    return data.map((post) => <Card key={post._id} {...post} />);
  }

  return (
    <h2 className="mt-5 font-bold text-[#6469ff] text-xl uppercase">{title}</h2>
  );
};

const Home = () => {
  const [loading, setLoading] = useState(false);
  const [allPosts, setAllPosts] = useState(null);
  const [searchText, setSearchText] = useState("");
  const [searchedResults, setSearchedResults] = useState(null);

  const fetchPosts = async () => {
    setLoading(true);
    try {
      const response = await fetch("http://localhost:8080/api/v1/post", {
        method: "GET",
        headers: {
          "Content-Type": "application/json",
        },
      });

      if (!response.ok) {
        throw new Error(`Error: ${response.status}`);
      }

      const result = await response.json();
      setAllPosts(result.data.reverse());
    } catch (err) {
      console.error("❌ Failed to fetch posts:", err);
      alert("Backend not running or wrong port!");
    } finally {
      setLoading(false);
    }
  };

  useEffect(() => {
    fetchPosts();
  }, []);

  return (
    <section className="max-w-7xl mx-auto">
      {/* Showcase Section */}
      <div className="flex justify-between items-center">
        <h1 className="font-extrabold text-[#222328] text-[32px]">
          The Community Showcase
        </h1>

        {/* ✅ Action Buttons */}
        <div className="flex gap-3">
          <Link
            to="/login"
            className="font-inter font-medium bg-gray-500 text-white px-4 py-2 rounded-md"
          >
            Login
          </Link>
          <Link
            to="/signup"
            className="font-inter font-medium bg-green-600 text-white px-4 py-2 rounded-md"
          >
            Signup
          </Link>
          <Link
            to="/create-post"
            className="font-inter font-medium bg-[#6469ff] text-white px-4 py-2 rounded-md"
          >
            Create
          </Link>
        </div>
      </div>

      <p className="mt-2 text-[#666e75] text-[16px] max-w-[500px]">
        Browse through a collection of imaginative and visually stunning images
        generated by AI
      </p>

      {/* Search bar */}
      <div className="mt-16">
        <FormField
          labelName="Search posts"
          type="text"
          name="text"
          placeholder="Search something..."
          value={searchText}
          handleChange={(e) => setSearchText(e.target.value)}
        />
      </div>

      {/* Render Section */}
      <div className="mt-10">
        {loading ? (
          <div className="flex justify-center items-center">
            <Loader />
          </div>
        ) : (
          <>
            {searchText && (
              <h2 className="font-medium text-[#666e75] text-xl mb-3">
                Showing results for{" "}
                <span className="text-[#222328]">{searchText}</span>
              </h2>
            )}
            <div className="grid lg:grid-cols-4 sm:grid-cols-3 xs:grid-cols-2 grid-cols-1 gap-3">
              {searchText ? (
                <RenderCards
                  data={searchedResults}
                  title="No search results found"
                />
              ) : (
                <RenderCards data={allPosts} title="No posts found" />
              )}
            </div>
          </>
        )}
      </div>
    </section>
  );
};

export default Home;
